Running build
Make -cache set?
Run rebuild from build
caches &{{map[] {0 0}} {map[] {0 0}} {map[] {0 0}} {map[] {0 0}} {map[] map[] {0 0} 1}}
Cache MISS :) file~!pa~/Users/maxa/projects/esbuild/.pnp.cjs~!pa~~!pa~~!pa~0
Cache MISS :) file~!pa~/Users/maxa/projects/esbuild/testcode/some.js~!pa~~!pa~~!pa~0
Cache MISS :) file~!pa~/Users/maxa/projects/esbuild/testcode/another.js~!pa~~!pa~~!pa~0
â–¶ [INFO] Timing information (times may not nest hierarchically due to parallelism)

  make-cache-set: 0ms
  Scan phase: 5ms
    On-start callbacks: 0ms
    Preprocess injected files: 0ms
    Add entry points: 0ms
    Scan all dependencies: 4ms
      Parse runtime: 1ms
      Scanning<runtime>: 0ms
      Scanningtestcode/some.js: 0ms
      Scanningtestcode/another.js: 0ms
    Process scanned files: 0ms
  Compile phase: 1ms
    Spawn source map tasks: 0ms
    Link: 1ms
      Clone linker graph: 0ms
      Scan imports and exports: 0ms
        Step 1: 0ms
        Step 2: 0ms
        Step 3: 0ms
        Step 4: 0ms
        Step 5: 0ms
        Step 6: 0ms
      Tree shaking: 0ms
      Code splitting: 0ms
      Compute chunks: 0ms
      Compute cross-chunk dependencies: 0ms
      Waiting for mangle cache: 0ms
      Mangle props: 0ms
      Mangle local CSS: 0ms
      Generate chunks: 0ms
        Generate chunk "some.js": 0ms
          Minify symbols: 0ms
            Compute reserved names: 0ms
            Accumulate symbol counts: 0ms
              Parallel phase: 0ms
              Serial phase: 0ms
            Assign names by frequency: 0ms
          Print JavaScript files: 0ms
          Join JavaScript files: 0ms
        Generate final output files: 0ms
  Write output files: 0ms
  On-end callbacks: 0ms

var o="usedVar";var e="wrold",t="wrold",s="wrold",d="wrold",n="wrold",p="wrold",c="wrold",x="wrold",h=o;export{e as hello,t as hello2,s as hello3,d as hello4,n as hello5,p as hello6,c as hello7,x as hello8,h as hello9};
